if not platform: platform = '0'

#
#  ami variables
#
heartbeat_period = 1000 # units are ms

ami_workers_per_node = 4
ami_worker_nodes = ["drp-neh-cmp007"]
ami_num_workers = len(ami_worker_nodes)
ami_manager_node = "drp-neh-cmp011"

procmgr_ami = [
#
# ami
#
 { 'host': ami_manager_node, 'id':'ami-global',  'flags':'s', 'conda':conda_rel, 'cmd':f'ami-global -N 0 -n {ami_num_workers}'},
 { 'host': ami_manager_node, 'id':'ami-manager', 'flags':'s', 'conda':conda_rel, 'cmd':f'ami-manager -n {ami_num_workers*ami_workers_per_node} -N {ami_num_workers}'},
 {                           'id':'ami-client',  'flags':'s', 'conda':conda_rel, 'cmd':f'ami-client -H {ami_manager_node}'},
]

#
# ami workers
#
for N, worker_node in enumerate(ami_worker_nodes):
    procmgr_ami.append({ host: worker_node, id:f'meb{N}', flags:'spu', conda:conda_rel,
                         cmd:f'{task_set} monReqServer -P {hutch} -C {collect_host} -M {prom_dir} -d -q {ami_workers_per_node}'})
    for n in range(ami_workers_per_node):
      procmgr_ami.append({ 'host': worker_node, 'id': f'ami-worker_{N}_{n}', 'flags':'s', 'conda':conda_rel,
                           'cmd': f'ami-worker  -N {N*ami_num_workers+n} -n {ami_num_workers} -b {heartbeat_period} -H {ami_manager_node} psana:////reg/g/pcds/dist/pds/tmo/misc/worker.json'})

    procmgr_ami.append({ 'host': worker_node, 'id': f'ami-node_{N}', 'flags':'s', 'conda':conda_rel,
    	                 'cmd': f'ami-node -N {N} -n {ami_workers_per_node} -H {ami_manager_node} --log-level debug'})

procmgr_config.extend(procmgr_ami)
